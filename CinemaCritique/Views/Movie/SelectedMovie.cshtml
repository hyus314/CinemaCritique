@model SelectedMovieViewModel;
@inject Microsoft.AspNetCore.Antiforgery.IAntiforgery Antiforgery

@{
    var requestReviewToken = Antiforgery.GetAndStoreTokens(Context).RequestToken;
    var requestWatchlistToken = Antiforgery.GetAndStoreTokens(Context).RequestToken;
}

<input id="__RequestVerificationReviewToken" type="hidden" value="@requestReviewToken" />
<input id="__RequestVerificationWatchlistToken" type="hidden" value="@requestWatchlistToken" />

<link rel="stylesheet" href="~/css/movie/selectedMovie.css" asp-append-version="true" />
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.2/css/all.min.css" integrity="sha512-z3gLpd7yknf1YoNbCzqRKc4qyor8gaKU1qmn+CShxbuBusANI9QpRohGBreCFkKxLhei6S9CQXFEbbKuqLg0DA==" crossorigin="anonymous" referrerpolicy="no-referrer" />

<input type="hidden" id="hiddenMovieId" value="@Model.Id" />


<div class="movie-detail-container">
    <div class="movie-header" style="background-image: url('@Model.ScenePhotoURL')">
        <div class="overlay">
            <h1>@Model.Title</h1>
            <h3>@Model.YearPublished</h3>
        </div>
    </div>

    <div class="movie-content">
        <img src="@Model.CoverPhotoURL" alt="@Model.Title" class="cover-photo" />

        <div class="movie-info">
            <h2>Directed by: @Model.Director</h2>
            <p>@Model.Description</p>
            <h4>Genre: @Model.Genre</h4>
            <h4>Main Roles: @Model.MainRoles</h4>
            @if (Model.HasReviews)
            {
                <h4>Rating: @Model.Rating</h4>
            }
            else
            {
                <h4>@Model.Rating</h4>
            }
            <button id="addToWatchlist"><i id="watchlistIcon" class="fa-solid fa-clapperboard"></i>Add To Watchlist</button>
        </div>


        <div class="trailer">
            <iframe src="@Model.TrailerURL" allowfullscreen></iframe>
        </div>
    </div>
</div>

<div class="review-section">
    <h3>Leave a Review</h3>
    <div id="message-box" style="display: none;"></div>
    <div class="rating">
        <span class="star" data-value="1">☆</span>
        <span class="star" data-value="2">☆</span>
        <span class="star" data-value="3">☆</span>
        <span class="star" data-value="4">☆</span>
        <span class="star" data-value="5">☆</span>
        <span class="star" data-value="6">☆</span>
        <span class="star" data-value="7">☆</span>
        <span class="star" data-value="8">☆</span>
        <span class="star" data-value="9">☆</span>
        <span class="star" data-value="10">☆</span>
    </div>
    <textarea id="review-text" placeholder="Write your review here...">@ViewData["InitialReviewText"]</textarea>
    <div id="char-counter">300 characters remaining</div>
    <h2 id="movie-id" data-value="@Model.Id" hidden></h2>
    <button id="submit-review">Submit Review</button>
</div>


<div id="reviewsContainer">
    @await Component.InvokeAsync("ReviewsForMovie", new {movieId = Model.Id});
</div>
<div id="deleteModal" class="delete-modal">
    <div class="delete-modal-content">
        <p>Are you sure you want to delete your review?</p>
        <button id="confirmDelete">Yes</button>
        <button id="cancelDelete">No</button>
    </div>
</div>

<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="~/js/review/review.js"></script>
<script src="~/js/movies/selectedMovie.js"></script>
<script>
    $(document).ready(function () {
        var initialRatingValue = @Html.Raw(Json.Serialize(ViewData["InitialRatingValue"] ?? "null"));
        if (initialRatingValue && initialRatingValue !== "null") {
            $(".star").each(function () {
                var $this = $(this);
                var starValue = $this.data('value');
                if (starValue <= initialRatingValue) {
                    $this.addClass('selected');
                }
            });
        }
    });
</script>